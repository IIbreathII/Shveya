import { NestFactory } from '@nestjs/core';
import { AppModule } from './app.module';
import { DocumentBuilder, SwaggerModule } from '@nestjs/swagger';
import { json, urlencoded, static as serveStatic } from 'express';
import { ConfigService } from '@nestjs/config';
import { ValidationPipe } from '@nestjs/common';
import { join } from 'path';

async function bootstrap() {
  const app = await NestFactory.create(AppModule);
  const configService = app.get(ConfigService);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Swagger
  const config = new DocumentBuilder()
    .setTitle('My Project API')
    .setDescription('API Documentation for My Project')
    .setVersion('1.0')
    .addTag('Markers')
    .addBearerAuth()
    .build();

  const document = SwaggerModule.createDocument(app, config);
  SwaggerModule.setup('api', app, document);

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Body Parser
  app.use(json({ limit: '10mb' }));
  app.use(urlencoded({ extended: true, limit: '10mb' }));

  // –í–∫–ª—é—á–µ–Ω–∏–µ CORS
  app.enableCors();

  // –í–∫–ª—é—á–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –≤–∞–ª–∏–¥–∞—Ü–∏—é –∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ç–∏–ø–æ–≤
  app.useGlobalPipes(new ValidationPipe({
    transform: true,
    whitelist: true,
  }));

  // –†–∞–∑–¥–∞—á–∞ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤ (–¥–æ—Å—Ç—É–ø –∫ /uploads)
  app.use('/uploads', serveStatic(join(__dirname, '..', 'uploads')));

  const PORT = configService.get<number>('PORT') || 3007;
  console.log(`üöÄ Server running on port ${PORT}`);
  
  await app.listen(PORT);
}

bootstrap();
